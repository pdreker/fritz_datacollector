name: Tag, Build and Push Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  tag-release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    name: Tag release
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.MASTER_PUSH_TOKEN }}
          fetch-depth: 0
      - uses: actions-ecosystem/action-release-label@v1
        id: release-label
        with:
          label_prefix: ""
      - name: Get latest Tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          semver_only: true
      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        if: ${{ steps.release-label.outputs.level != null }}
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ steps.release-label.outputs.level }}
      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: "${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}"
  build-docker:
    runs-on: ubuntu-latest
    name: Build Docker Image (release)
    env:
      DOCKERHUB_USERNAME: pdreker
      IMAGE: fritz_datacollector
    steps:
      - uses: actions/checkout@v3
      - name: generate docker tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.2.1
      - name: generate requirements.txt
        run: poetry export -f requirements.txt --output requirements.txt
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
